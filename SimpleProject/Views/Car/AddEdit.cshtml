@model  SimpleProject.Contract.DataContracts.CarDto

@{
    ViewBag.Title = "AddEdit";
}

@using (Ajax.BeginForm("AddEdit", "Car", null, new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "onSuccess(data);"
}, new { @class = "form-horizontal", id = "carForm" }))
{
<!-- Hidden -->
@Html.AntiForgeryToken()

@Html.HiddenFor(m => m.Id)
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h4 class="modal-title">@ViewBag.Action</h4>
</div>
<div class="modal-body">
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Year, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.Year, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Year)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Color, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.Color, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Color)
        </div>
    </div>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
    <button type="submit" class="btn btn-success">Zapisz</button>
</div>
}

<script>
    function onSuccess(result) {
        if (result.IsSuccess == true) {
            $('#carModal').modal('hide');
            reloadTable();
        }
        else
            alert(result.ErrorMessage);
    }
</script>



